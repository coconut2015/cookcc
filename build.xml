<?xml version="1.0" encoding="UTF-8"?>
<project name="cookcc" basedir="." default="all">
	<property name="src" location="${basedir}/src"/>
	<property name="lib" location="${basedir}/lib"/>
	<property name="dist" value="${basedir}/dist"/>
	<property name="tool" value="${basedir}/tool"/>
	<property name="build" value="${basedir}/cookcc_classes"/>

	<property name="license" value="LICENSE_cookcc.txt"/>
	<property name="version" value="0.4"/>

	<target name="init">
		<mkdir dir="${dist}"/>
	</target>
	<target name="initcookcc">
		<taskdef name="cookcc" classname="org.yuanheng.cookcc.ant.Task" classpath="${tool}/cookcc-latest.jar"/>
	</target>

	<target name="compile" depends="init">
		<delete includeemptydirs="true">
		    <fileset dir="${build}" includes="**/**"/>
		</delete>
		<mkdir dir="${build}"/>
		<javac debug="true" deprecation="true" destdir="${build}" optimize="true" includes="**/**.java" source="1.5" target="1.5">
			<src path="${src}"/>
			<src path="${basedir}/javaap_src"/>
			<src path="${basedir}/anttask_src"/>
			<classpath>
				<fileset dir="${lib}" includes="*.jar"/>
			</classpath>
		</javac>
	</target>
	<target name="cookcc_source_zip" depends="init">
		<delete file="${dist}/cookcc_src-${version}.zip"/>
		<zip compress="true" destfile="${dist}/cookcc_src-${version}.zip">
			<fileset dir="${basedir}">
				<patternset>
					<include name="src/**/**.*"/>
					<include name="lib/**/**.jar"/>
					<include name="javaap_src/**/**.*"/>
					<include name="anttask_src/**/**.*"/>
					<include name="junit/**/**.*"/>
					<include name="tests/**/**.*"/>
					<include name="tool/**/**.*"/>
					<include name="${license}"/>
				</patternset>
			</fileset>
		</zip>
	</target>
	<target name="cookcc_jar" depends="init,compile" description="Build CookCC binary">
		<tstamp>
			<format property="today" pattern="yyyy-MM-dd" locale="en"/>
		</tstamp>
		<delete file="${dist}/cookcc-${version}.jar"/>
		<jar compress="true" destfile="${dist}/cookcc-${version}.jar">
			<manifest>
				<attribute name="Main-CLass" value="org.yuanheng.cookcc.Main"/>
				<attribute name="Build-Date" value="${today}"/>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Specification-Title" value="shiva"/>
				<attribute name="Specification-Version" value="${version}"/>
				<attribute name="Specification-Vendor" value="Heng Yuan"/>
				<attribute name="Implementation-Version" value="${version} ${today}"/>
				<attribute name="Implementation-Vendor" value="Heng Yuan"/>
			</manifest>
			<fileset dir="${build}" includes="**/**.class"/>
			<fileset dir="${src}" excludes="**/**.java"/>
			<!-- freemarker jar files -->
			<zipfileset src="${lib}/freemarker.jar"/>
			<!-- cookxml jar files -->
			<zipfileset src="${lib}/cookxml-3.0.1.jar" excludes="LICENSE"/>
			<fileset dir="${basedir}">
				<patternset>
					<include name="${license}"/>
				</patternset>
			</fileset>

			<fileset dir="${basedir}/javaap_src">
				<include name="META-INF/**/**"/>
				<include name="resources/**/**"/>
			</fileset>
		</jar>
		<copy file="${dist}/cookcc-${version}.jar" tofile="${tool}/cookcc-latest.jar"/>
	</target>

	<target name="all" depends="cookcc_jar,cookcc_source_zip"/>

	<!-- lexer/parser generated from CookCC -->

	<target name="FileHeaderLexer.java" depends="initcookcc">
		<cookcc srcdir="${basedir}/javaap_src" src="org/yuanheng/cookcc/input/javaap/FileHeaderScanner.java"/>
	</target>
	<target name="YaccLexer.java" depends="initcookcc">
		<cookcc srcdir="${src}" src="org/yuanheng/cookcc/input/yacc/YaccParser.java"/>
	</target>
	<target name="TokenParser.java" depends="initcookcc">
		<cookcc src="${basedir}/src/org/yuanheng/cookcc/util/TokenParser.xcc">
			<option name="-class" value="org.yuanheng.cookcc.util.TokenParser"/>
			<option name="-d" value="${basedir}/src"/>
			<option name="-public"/>
			<option name="-generics"/>
		</cookcc>
	</target>
	<target name="CCLScanner.java" depends="initcookcc">
		<cookcc srcdir="${src}" src="org/yuanheng/cookcc/lexer/CCLParser.java"/>
	</target>
	<target name="PatternScanner.java" depends="initcookcc">
		<cookcc srcdir="${src}" src="org/yuanheng/cookcc/lexer/PatternParser.java">
			<!-- <option name="-analysis"/> -->
		</cookcc>
	</target>
</project>
