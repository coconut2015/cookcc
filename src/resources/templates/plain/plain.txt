<#macro array a>
<#list a as i><#if i_index &gt; 0>,</#if>${i}</#list>
</#macro>
<#macro array3d a>
<#list a as i>
	<@array i/>
</#list>
</#macro>
<#if lexer?has_content>
# lexer
# properties
: unicode = ${unicode?string}
: bol = ${lexer.bol?string}
: backup = ${lexer.backup?string}
: cases = ${lexer.caseCount}
: table = ${lexer.table}
<#if lexer.table == "ecs" || lexer.table == "compressed">
: ecs = ${lexer.ecsGroupCount}
</#if>
: states = ${lexer.dfa.size}
<#if lexer.table == "ecs" || lexer.table == "compressed">
# ecs
<@array lexer.dfa.ecs/>
</#if>
# dfa
<#if lexer.table == "ecs" || lexer.table == "full">
<@array3d lexer.dfa.table/>
</#if>
<#if lexer.table == "compressed">
# verify = ${lexer.dfa.verify?string}
# base
<@array lexer.dfa.base/>
# next
<@array lexer.dfa.next/>
# check
<@array lexer.dfa.next/>
<#if lexer.dfa.default?has_content>
# default
<@array lexer.dfa.default/>
</#if>
<#if lexer.dfa.error>
: error = ${lexer.dfa.error?string}
</#if>
<#if lexer.dfa.meta?has_content>
# meta
<@array lexer.dfa.meta/>
</#if>
</#if>
# states
<@array lexer.states/>
# begins
<@array lexer.begins/>
# accepts
<@array lexer.accept/>
# cases
<#list lexer.cases as i>
<#list i.patterns as p>
case ${p.caseValue}
{${i.action}}
</#list>
</#list>
# end
</#if>
